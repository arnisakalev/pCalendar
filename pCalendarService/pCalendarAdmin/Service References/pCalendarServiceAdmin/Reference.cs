//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.VisualStudio.ServiceReference.Platforms, version 12.0.21005.1
// 
namespace pCalendarAdmin.pCalendarServiceAdmin {
    using System.Runtime.Serialization;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="country", Namespace="http://schemas.datacontract.org/2004/07/ProductionCalendarModel")]
    public partial class country : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short CountryIdField;
        
        private string CountryNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CountryName {
            get {
                return this.CountryNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CountryNameField, value) != true)) {
                    this.CountryNameField = value;
                    this.RaisePropertyChanged("CountryName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="calendar", Namespace="http://schemas.datacontract.org/2004/07/ProductionCalendarModel")]
    public partial class calendar : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short CalendarIdField;
        
        private string CalendarNameField;
        
        private short CountryIdField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CalendarId {
            get {
                return this.CalendarIdField;
            }
            set {
                if ((this.CalendarIdField.Equals(value) != true)) {
                    this.CalendarIdField = value;
                    this.RaisePropertyChanged("CalendarId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CalendarName {
            get {
                return this.CalendarNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CalendarNameField, value) != true)) {
                    this.CalendarNameField = value;
                    this.RaisePropertyChanged("CalendarName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="dtype", Namespace="http://schemas.datacontract.org/2004/07/ProductionCalendarModel")]
    public partial class dtype : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short DTypeIdField;
        
        private string DTypeNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short DTypeId {
            get {
                return this.DTypeIdField;
            }
            set {
                if ((this.DTypeIdField.Equals(value) != true)) {
                    this.DTypeIdField = value;
                    this.RaisePropertyChanged("DTypeId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string DTypeName {
            get {
                return this.DTypeNameField;
            }
            set {
                if ((object.ReferenceEquals(this.DTypeNameField, value) != true)) {
                    this.DTypeNameField = value;
                    this.RaisePropertyChanged("DTypeName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="holiday", Namespace="http://schemas.datacontract.org/2004/07/ProductionCalendarModel")]
    public partial class holiday : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short HolidayIdField;
        
        private string HolidayNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short HolidayId {
            get {
                return this.HolidayIdField;
            }
            set {
                if ((this.HolidayIdField.Equals(value) != true)) {
                    this.HolidayIdField = value;
                    this.RaisePropertyChanged("HolidayId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string HolidayName {
            get {
                return this.HolidayNameField;
            }
            set {
                if ((object.ReferenceEquals(this.HolidayNameField, value) != true)) {
                    this.HolidayNameField = value;
                    this.RaisePropertyChanged("HolidayName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="region", Namespace="http://schemas.datacontract.org/2004/07/ProductionCalendarModel")]
    public partial class region : object, System.ComponentModel.INotifyPropertyChanged {
        
        private short CountryIdField;
        
        private short RegionIdField;
        
        private string RegionNameField;
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short CountryId {
            get {
                return this.CountryIdField;
            }
            set {
                if ((this.CountryIdField.Equals(value) != true)) {
                    this.CountryIdField = value;
                    this.RaisePropertyChanged("CountryId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public short RegionId {
            get {
                return this.RegionIdField;
            }
            set {
                if ((this.RegionIdField.Equals(value) != true)) {
                    this.RegionIdField = value;
                    this.RaisePropertyChanged("RegionId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RegionName {
            get {
                return this.RegionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RegionNameField, value) != true)) {
                    this.RegionNameField = value;
                    this.RaisePropertyChanged("RegionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="pCalendarServiceAdmin.ICalendarService")]
    public interface ICalendarService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetCountriesList", ReplyAction="http://tempuri.org/ICalendarService/GetCountriesListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<pCalendarAdmin.pCalendarServiceAdmin.country>> GetCountriesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/AddCountry", ReplyAction="http://tempuri.org/ICalendarService/AddCountryResponse")]
        System.Threading.Tasks.Task<int> AddCountryAsync(pCalendarAdmin.pCalendarServiceAdmin.country Country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/EditCountry", ReplyAction="http://tempuri.org/ICalendarService/EditCountryResponse")]
        System.Threading.Tasks.Task<bool> EditCountryAsync(pCalendarAdmin.pCalendarServiceAdmin.country Country);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetCalendarsList", ReplyAction="http://tempuri.org/ICalendarService/GetCalendarsListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<pCalendarAdmin.pCalendarServiceAdmin.calendar>> GetCalendarsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/AddCalendar", ReplyAction="http://tempuri.org/ICalendarService/AddCalendarResponse")]
        System.Threading.Tasks.Task<int> AddCalendarAsync(pCalendarAdmin.pCalendarServiceAdmin.calendar Calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/EditCalenadr", ReplyAction="http://tempuri.org/ICalendarService/EditCalenadrResponse")]
        System.Threading.Tasks.Task<bool> EditCalenadrAsync(pCalendarAdmin.pCalendarServiceAdmin.calendar Calendar);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetDayTypes", ReplyAction="http://tempuri.org/ICalendarService/GetDayTypesResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<pCalendarAdmin.pCalendarServiceAdmin.dtype>> GetDayTypesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetHolidaysList", ReplyAction="http://tempuri.org/ICalendarService/GetHolidaysListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<pCalendarAdmin.pCalendarServiceAdmin.holiday>> GetHolidaysListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/AddHoliday", ReplyAction="http://tempuri.org/ICalendarService/AddHolidayResponse")]
        System.Threading.Tasks.Task<int> AddHolidayAsync(pCalendarAdmin.pCalendarServiceAdmin.holiday Holiday);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/EditHoliday", ReplyAction="http://tempuri.org/ICalendarService/EditHolidayResponse")]
        System.Threading.Tasks.Task<bool> EditHolidayAsync(pCalendarAdmin.pCalendarServiceAdmin.holiday Holiday);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/GetRegionsList", ReplyAction="http://tempuri.org/ICalendarService/GetRegionsListResponse")]
        System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<pCalendarAdmin.pCalendarServiceAdmin.region>> GetRegionsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/AddRegion", ReplyAction="http://tempuri.org/ICalendarService/AddRegionResponse")]
        System.Threading.Tasks.Task<int> AddRegionAsync(pCalendarAdmin.pCalendarServiceAdmin.region Region);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICalendarService/EditRegion", ReplyAction="http://tempuri.org/ICalendarService/EditRegionResponse")]
        System.Threading.Tasks.Task<bool> EditRegionAsync(pCalendarAdmin.pCalendarServiceAdmin.region Region);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICalendarServiceChannel : pCalendarAdmin.pCalendarServiceAdmin.ICalendarService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CalendarServiceClient : System.ServiceModel.ClientBase<pCalendarAdmin.pCalendarServiceAdmin.ICalendarService>, pCalendarAdmin.pCalendarServiceAdmin.ICalendarService {
        
        /// <summary>
        /// Implement this partial method to configure the service endpoint.
        /// </summary>
        /// <param name="serviceEndpoint">The endpoint to configure</param>
        /// <param name="clientCredentials">The client credentials</param>
        static partial void ConfigureEndpoint(System.ServiceModel.Description.ServiceEndpoint serviceEndpoint, System.ServiceModel.Description.ClientCredentials clientCredentials);
        
        public CalendarServiceClient() : 
                base(CalendarServiceClient.GetDefaultBinding(), CalendarServiceClient.GetDefaultEndpointAddress()) {
            this.Endpoint.Name = EndpointConfiguration.NetTcpBinding_ICalendarService.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarServiceClient(EndpointConfiguration endpointConfiguration) : 
                base(CalendarServiceClient.GetBindingForEndpoint(endpointConfiguration), CalendarServiceClient.GetEndpointAddress(endpointConfiguration)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarServiceClient(EndpointConfiguration endpointConfiguration, string remoteAddress) : 
                base(CalendarServiceClient.GetBindingForEndpoint(endpointConfiguration), new System.ServiceModel.EndpointAddress(remoteAddress)) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarServiceClient(EndpointConfiguration endpointConfiguration, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(CalendarServiceClient.GetBindingForEndpoint(endpointConfiguration), remoteAddress) {
            this.Endpoint.Name = endpointConfiguration.ToString();
            ConfigureEndpoint(this.Endpoint, this.ClientCredentials);
        }
        
        public CalendarServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<pCalendarAdmin.pCalendarServiceAdmin.country>> GetCountriesListAsync() {
            return base.Channel.GetCountriesListAsync();
        }
        
        public System.Threading.Tasks.Task<int> AddCountryAsync(pCalendarAdmin.pCalendarServiceAdmin.country Country) {
            return base.Channel.AddCountryAsync(Country);
        }
        
        public System.Threading.Tasks.Task<bool> EditCountryAsync(pCalendarAdmin.pCalendarServiceAdmin.country Country) {
            return base.Channel.EditCountryAsync(Country);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<pCalendarAdmin.pCalendarServiceAdmin.calendar>> GetCalendarsListAsync() {
            return base.Channel.GetCalendarsListAsync();
        }
        
        public System.Threading.Tasks.Task<int> AddCalendarAsync(pCalendarAdmin.pCalendarServiceAdmin.calendar Calendar) {
            return base.Channel.AddCalendarAsync(Calendar);
        }
        
        public System.Threading.Tasks.Task<bool> EditCalenadrAsync(pCalendarAdmin.pCalendarServiceAdmin.calendar Calendar) {
            return base.Channel.EditCalenadrAsync(Calendar);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<pCalendarAdmin.pCalendarServiceAdmin.dtype>> GetDayTypesAsync() {
            return base.Channel.GetDayTypesAsync();
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<pCalendarAdmin.pCalendarServiceAdmin.holiday>> GetHolidaysListAsync() {
            return base.Channel.GetHolidaysListAsync();
        }
        
        public System.Threading.Tasks.Task<int> AddHolidayAsync(pCalendarAdmin.pCalendarServiceAdmin.holiday Holiday) {
            return base.Channel.AddHolidayAsync(Holiday);
        }
        
        public System.Threading.Tasks.Task<bool> EditHolidayAsync(pCalendarAdmin.pCalendarServiceAdmin.holiday Holiday) {
            return base.Channel.EditHolidayAsync(Holiday);
        }
        
        public System.Threading.Tasks.Task<System.Collections.ObjectModel.ObservableCollection<pCalendarAdmin.pCalendarServiceAdmin.region>> GetRegionsListAsync() {
            return base.Channel.GetRegionsListAsync();
        }
        
        public System.Threading.Tasks.Task<int> AddRegionAsync(pCalendarAdmin.pCalendarServiceAdmin.region Region) {
            return base.Channel.AddRegionAsync(Region);
        }
        
        public System.Threading.Tasks.Task<bool> EditRegionAsync(pCalendarAdmin.pCalendarServiceAdmin.region Region) {
            return base.Channel.EditRegionAsync(Region);
        }
        
        public virtual System.Threading.Tasks.Task OpenAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndOpen));
        }
        
        public virtual System.Threading.Tasks.Task CloseAsync() {
            return System.Threading.Tasks.Task.Factory.FromAsync(((System.ServiceModel.ICommunicationObject)(this)).BeginClose(null, null), new System.Action<System.IAsyncResult>(((System.ServiceModel.ICommunicationObject)(this)).EndClose));
        }
        
        private static System.ServiceModel.Channels.Binding GetBindingForEndpoint(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_ICalendarService)) {
                System.ServiceModel.NetTcpBinding result = new System.ServiceModel.NetTcpBinding();
                result.MaxBufferSize = int.MaxValue;
                result.ReaderQuotas = System.Xml.XmlDictionaryReaderQuotas.Max;
                result.MaxReceivedMessageSize = int.MaxValue;
                return result;
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.EndpointAddress GetEndpointAddress(EndpointConfiguration endpointConfiguration) {
            if ((endpointConfiguration == EndpointConfiguration.NetTcpBinding_ICalendarService)) {
                return new System.ServiceModel.EndpointAddress(new System.Uri("net.tcp://localhost:8733/pCalendarService/Admin"), new System.ServiceModel.DnsEndpointIdentity("localhost"));
            }
            throw new System.InvalidOperationException(string.Format("Could not find endpoint with name \'{0}\'.", endpointConfiguration));
        }
        
        private static System.ServiceModel.Channels.Binding GetDefaultBinding() {
            return CalendarServiceClient.GetBindingForEndpoint(EndpointConfiguration.NetTcpBinding_ICalendarService);
        }
        
        private static System.ServiceModel.EndpointAddress GetDefaultEndpointAddress() {
            return CalendarServiceClient.GetEndpointAddress(EndpointConfiguration.NetTcpBinding_ICalendarService);
        }
        
        public enum EndpointConfiguration {
            
            NetTcpBinding_ICalendarService,
        }
    }
}
